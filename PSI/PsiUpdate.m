function [thresEst, slopeEst, PSIpar]=PsiUpdate(PSIpar, contIndex, response)% function [ta, tb, pab]=PsiUpdate(pab, contIndex, response, m,n, pr0ax pr1ax,thresRange,slopeRange)% This function update the world of PSI and estimates contrast threshold%%	7/8/96	LLK Wrote it.%	3/3/99	CCC	Update for MATLAB 5.xpr1ax=PSIpar.pr1ax;pr0ax=PSIpar.pr0ax;pab=PSIpar.pab;thresRange=PSIpar.thresRange;slopeRange=PSIpar.slopeRange;contRange=PSIpar.contRange;m=length(thresRange);n=length(slopeRange);% 7 updating p.d.f.	tmpold=reshape(pab,n,m)/max(pab);    if response == 1    % correct      pab = pab.*pr1ax(:,contIndex);    else			% incorrect      pab = pab.*pr0ax(:,contIndex);	end	pab=pab/sum(pab);	tmp=reshape(pab,n,m)/max(pab);	%	drawnow%	pause% 8 new estimate%  	thresIndex = kron((1:m),ones(1,n)) * pab;	% predicted indices	slopeIndex = kron(ones(1,m),(1:n)) * pab;%	The threshold and slope estimates are computed with linear interpolation    thresEst = (ceil(thresIndex)-thresIndex)*thresRange(floor(thresIndex))+(thresIndex-floor(thresIndex))*thresRange(ceil(thresIndex));			% predicted values	slopeEst = (ceil(slopeIndex)-slopeIndex)*slopeRange(floor(slopeIndex))+(slopeIndex-floor(slopeIndex))*slopeRange(ceil(slopeIndex));PSIpar.pab=pab;	